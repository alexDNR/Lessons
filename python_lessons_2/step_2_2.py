'''
    Координатные четверти
Дан набор точек на координатной плоскости. 
Необходимо подсчитать и вывести количество точек, 
лежащих в каждой координатной четверти.
    Формат входных данных
В первой строке записано количество точек. 
Каждая следующая строка состоит из двух целых чисел — координат точки 
(сначала абсцисса – x, затем ордината – y), разделенных символом пробела.
    Формат выходных данных
Программа должна вывести количество точек, 
лежащих в каждой координатной четверти, как в примерах.
Примечание. Учтите, что точки, лежащие на осях координат, 
не принято относить к какой либо координатной четверти.
'''
# n = int(input())
# I = 0
# II = 0
# III = 0
# IV = 0
# for _ in range(n):
#     s = input().split()
#     if int(s[0]) > 0 and int(s[1]) > 0:
#         I += 1
#     elif int(s[0]) > 0 and int(s[1]) < 0:
#         IV += 1  
#     elif int(s[0]) < 0 and int(s[1]) > 0:
#         II += 1
#     elif int(s[0]) < 0 and int(s[1]) < 0:
#         III += 1                
# print("Первая четверть:", I) 
# print("Вторая четверть:", II) 
# print("Третья четверть:", III) 
# print("Четвертая четверть:", IV) 


'''
    Больше предыдущего
На вход программе подается строка текста из натуральных чисел. 
Из неё формируется список чисел. Напишите программу подсчета количества чисел, 
которые больше предшествующего им в этом списке числа, 
то есть, стоят вслед за меньшим числом. 
    Формат входных данных
На вход программе подается строка текста из разделенных пробелами натуральных чисел.
    Формат выходных данных
Программа должна вывести одно число – количество элементов списка, больших предыдущего.
'''
# n = [int(i) for i in input().split()]
# count = 0
# for i in range(1 , len(n)):
#     if n[i] > n[i-1]:
#         count += 1
# print(count)    


'''
    Назад, вперёд и наоборот
На вход программе подается строка текста из натуральных чисел.
Из элементов строки формируется список чисел. 
Напишите программу, которая меняет местами соседние элементы списка 
(a[0] c a[1], a[2] c a[3] и т.д.). 
Если в списке нечетное количество элементов, 
то последний остается на своем месте.
    Формат входных данных
На вход программе подается строка текста, содержащая натуральные числа, 
разделенные пробелами.
    Формат выходных данных
Программа должна вывести измененный список, разделяя его элементы одним пробелом
'''
# s = [int(i) for i in input().split()]
# for i in range(0, len(s)-1, 2):
#     s[i], s[i+1] = s[i+1], s[i]
# print(*s)        


'''
    Сдвиг в развитии
На вход программе подается строка текста из натуральных чисел. 
Из элементов строки формируется список чисел. 
Напишите программу циклического сдвига элементов списка направо, 
когда последний элемент становится первым, 
а остальные сдвигаются на одну позицию вперед, в сторону увеличения индексов.
    Формат входных данных
На вход программе подается строка текста из разделенных пробелами натуральных чисел.
    Формат выходных данных
Программа должна вывести элементы измененного списка с циклическим сдвигом, 
разделяя его элементы одним пробелом.
'''
# s = [int(i) for i in input().split()]
# s.insert(0, s.pop(-1))
# print(*s)


'''
    Различные элементы
На вход программе подается строка текста, содержащая натуральные числа, 
расположенные по неубыванию. Из строки формируется список чисел. 
Напишите программу для подсчета количества разных элементов в списке.
    Формат входных данных
На вход программе подается строка текста, содержащая натуральные числа, 
разделенные символом пробела, расположенные по неубыванию.
    Формат выходных данных
Программа должна вывести одно число – количество различных элементов списка.
Примечание. Задачу можно решить без множеств.
'''
print(len(set(int(i) for i in input().split())))
     