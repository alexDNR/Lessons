'''
Дополните приведенный код, используя списочное выражение так, 
чтобы получить новый список, содержащий строки исходного списка 
с удаленным первым символом.
'''
# keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 
# 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 
# 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 
# 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 
# 'pass', 'raise', 'return', 'while', 'yield']
# new_keywords = [i[1:] for i in keywords] 
# print(new_keywords)


'''
Дополните приведенный код, используя списочное выражение, 
так чтобы получить новый список, 
содержащий длины строк исходного списка.
'''
# keywords = ['False', 'True', 'None', 'and', 'with', 'as', 
# 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 
# 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 
# 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 
# 'or', 'pass', 'raise', 'return', 'while', 'yield']
# lengths = [len(i) for i in keywords]
# print(lengths)


'''
Дополните приведенный код списочным выражением, 
чтобы получить новый список, содержащий только слова длиной 
не менее пяти символов (включительно).
'''
# keywords = ['False', 'True', 'None', 'and', 'with', 'as', 
# 'assert', 'break', 'class', 'continue', 'def', 'del', 
# 'elif', 'else', 'except', 'finally', 'try', 'for', 
# 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 
# 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']
# new_keywords = [i for i in keywords if len(i) >= 5]
# print(new_keywords)


'''
Дополните приведенный код, используя списочное выражение, 
так чтобы получить список всех чисел палиндромов от 100 до 1000
'''
# palindromes = [i for i in range(100, 1000) if i%10 == i//100]
# print(palindromes)


'''
    Списочное выражение 1
На вход программе подается натуральное число n. 
Напишите программу, использующую списочное выражение, 
которая создает список содержащий квадраты чисел от 1 до n, 
а затем выводит его элементы построчно, 
то есть каждый на отдельной строке.
    Формат входных данных
На вход программе подается натуральное число.
    Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
'''
# numbers = [i**2 for i in range(1, int(input())+1)]
# print(*numbers, sep='\n')


'''
    Списочное выражение 2
На вход программе подается строка текста, содержащая целые числа. 
Напишите программу, использующую списочное выражение, 
которая выведет кубы указанных чисел также на одной строке.
    Формат входных данных
На вход программе подается строка текста, 
содержащая целые числа, разделенные символом пробела.
    Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание 1. Для вывода элементов списка используйте цикл for.
Примечание 2. Используйте метод split().
'''
# numbers = [int(i)**3 for i in input().split()]
# print(*numbers)


'''
    В одну строку 1
На вход программе подается строка текста, содержащая слова. 
Напишите программу, которая выводит слова введенной строки в столбик.
    Формат входных данных
На вход программе подается строка текста, содержащая слова, 
разделенные символом пробела.
    Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
'''
# string = [print(i, sep='\n') for i in input().split()]


'''
    В одну строку 2
На вход программе подается строка текста. 
Напишите программу, использующую списочное выражение, 
которая выводит все цифровые символы данной строки.
    Формат входных данных
На вход программе подается строка текста.
    Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
'''
#numbers = [print(i, end='') for i in input() if i.isdigit()]


'''
    В одну строку 3
На вход программе подается строка текста, содержащая целые числа. 
Напишите программу, использующую списочное выражение, 
которая выведет квадраты четных чисел, 
которые не оканчиваются на цифру 4.
    Формат входных данных
На вход программе подается строка текста, 
содержащая целые числа, разделенные символом пробела.
    Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
'''
#numbers = [print(int(i)**2, end=' ') for i in input().split() if (int(i)**2)%10 != 4 and int(i)%2 == 0]
